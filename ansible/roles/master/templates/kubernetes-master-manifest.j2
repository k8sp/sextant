apiVersion: v1
kind: Pod
metadata:
  name: kube-controller
spec:
  hostNetwork: true
  volumes:
    - name: "etc-kubernetes"
      hostPath:
        path: "/etc/kubernetes"
    - name: ssl-certs-kubernetes
      hostPath:
        path: /etc/kubernetes/ssl
    - name: "ssl-certs-host"
      hostPath:
        path: "/usr/share/ca-certificates"
    - name: "var-run-kubernetes"
      hostPath:
        path: "/var/run/kubernetes"
    - name: "etcd-datadir"
      hostPath:
        path: "/var/lib/etcd"
    - name: "usr"
      hostPath:
        path: "/usr"
    - name: "lib64"
      hostPath:
        path: "/lib64"
  containers:
    - name: kube-apiserver
      image: {{ docker_domain }}:5000/{{ images_hyperkube }}
      command:
        - /hyperkube
        - apiserver
        - --allow-privileged=true
        - --bind-address=0.0.0.0
        - --secure-port=443
        - --etcd-servers=http://{{ groups['master'][0] }}:4001
        - --service-cluster-ip-range={{ service_cluster_ip_range }}
        - --admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
        - --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem
        - --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
        - --tls-cert-file=/etc/kubernetes/ssl/apiserver.pem
        - --client-ca-file=/etc/kubernetes/ssl/ca.pem
        - --basic-auth-file=/etc/kubernetes/basic/basic_auth.csv
        - --authorization-mode=ABAC
        - --authorization-policy-file=/etc/kubernetes/abac/policy.jsonl
        - --logtostderr=true
      ports:
        - containerPort: 443
          hostPort: 443
          name: https
      volumeMounts:
        - mountPath: /etc/kubernetes/ssl
          name: ssl-certs-kubernetes
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: ssl-certs-host
          readOnly: true
        - mountPath: /etc/kubernetes
          name: "etc-kubernetes"
        - mountPath: /var/run/kubernetes
          name: "var-run-kubernetes"

    - name: kube-controller-manager
      image: {{ docker_domain }}:5000/{{ images_hyperkube }}
      command:
      - /hyperkube
      - controller-manager
      - --service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem
      - --root-ca-file=/etc/kubernetes/ssl/ca.pem
      - --kubeconfig=/etc/kubernetes/config/local-kubeconfig.yaml
      livenessProbe:
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10252
        initialDelaySeconds: 15
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/kubernetes/ssl
        name: ssl-certs-kubernetes
        readOnly: true
      - mountPath: /etc/ssl/certs
        name: ssl-certs-host
        readOnly: true
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
        readOnly: true


    - name: kube-scheduler
      image: {{ docker_domain }}:5000/{{ images_hyperkube }}
      command:
      - /hyperkube
      - scheduler
      - --kubeconfig=/etc/kubernetes/config/local-kubeconfig.yaml
      livenessProbe:
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10251
        initialDelaySeconds: 15
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ssl-certs-host
        readOnly: true
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
        readOnly: true

    - name: kube-proxy
      image: {{ docker_domain }}:5000/{{ images_hyperkube }}
      command:
      - /hyperkube
      - proxy
      - --proxy-mode=iptables
      - --kubeconfig=/etc/kubernetes/config/local-kubeconfig.yaml
      securityContext:
        privileged: true
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ssl-certs-host
        readOnly: true
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
        readOnly: true
