---
- name: create path 
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /etc/kubernetes
    - /etc/kubernetes/ssl
    - /etc/kubernetes/config
    - /etc/kubernetes/manifests

# Generate an OpenSSL private key with a size (2048 bits)
- name: generate private key
  shell: openssl genrsa -out /etc/kubernetes/ssl/worker-key.pem 2048
  args:
    chdir: /etc/kubernetes/ssl
  tags: tls

- name: generate openssl.conf
  template:
    src: openssl-conf.j2
    dest: /etc/kubernetes/ssl/openssl.conf
    mode: 0644
    owner: root
  tags: tls

# Generate an OpenSSL Certificate Signing Request
- name: generate CSR 
  shell: openssl req -new -key worker-key.pem -out worker.csr -subj "/CN={{ inventory_hostname }}" -config openssl.conf
  args:
    chdir: /etc/kubernetes/ssl
  tags: tls

- name: create certificate
  shell: openssl x509 -req -in worker.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out worker.pem -days 3650 -extensions v3_req -extfile openssl.conf
  args:
    chdir: /etc/kubernetes/ssl
  tags: tls

- name: template worker-kubeconfig.yaml, kube-proxy.manifest and kubelet.service
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - { src: worker-kubeconfig.j2 , dest: /etc/kubernetes/config/worker-kubeconfig.yaml }
    - { src: kube-proxy-manifest.j2 , dest: /etc/kubernetes/manifests/kube-proxy.manifest }
    - { src: worker-kubelet-service.j2 , dest: /etc/systemd/system/kubelet.service }
  tags: k8s, systemd
  notify:
    - enable service


